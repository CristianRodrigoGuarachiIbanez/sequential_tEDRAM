1.- mit Globus verbinden
ssh globus
1.1 .-  in das Verzeichnis scratch geheb
cd scratch
1.2.-
2.- eine datei von auf kopieren
cp -r  ~/Downloads/tEDRAM/ /scratch/gucr

3.-
top
exit -> control + c
nvidia-smi
4.-  copy a dir to another
cp -R Pictures Pictures_backup

5.- move files or dir
mv dir dir
mv file dir

# -------------------------- install anaconda 
# ersten eines Temp Datei
mkdir temp

# in das Verzeichnis gehen
cd /tmp

# schnappt dir den Link aus der Webseite und lädt es mit crul runter
curl -O https://repo.anaconda.com/archive/Anaconda3-2020.11-Linux-x86_64.sh

# checkt, ob es richting runtergelanden wurde 
sha256sum

# bash + tb 
# bash + tb 

# bei der Installation gibt einfach das Verzechnis, wo das gespechert werden soll
/home/file/...

# aktivieren der Installation
source ~/.bachrc

# den Pfade setzen 
export PATH="/scratch/gucr/anaconda3/bin:$PATH"

#installation testen
conda list

# eine Virt Env erstellen
conda create --name  <> python=3.

# falls VENV nicht aktiviert werden könnte 
source /scratch/gucr/anaconda3/etc/profile.d/conda.sh

#activate 
conda activate tedram     ->  tedram_tf12 doesnt work
# ----------------- open the directory on a window 
xdg-open . # actual directory
# ----------------- open files text files 
gedit file1 file2.
# ---------------- tensorflow 

https://ai.informatik.tu-chemnitz.de/gogs/vitay/DeepFACS/src/master/README.md
# ----------------- downgrade numpy 
numpy 1.16.5
keras 2.2.4
h5py 2.10.0 # ojo noch nicht gemacht
conda install -c conda-forge numpy=1.16.4
# -------------- set tensorflow as backend
export KERAS_BACKEND=tensorflow
or
in ${CONDA_PREFIX}/etc/conda/activate.d/keras_activate.sh ändert die zweite Bedingung
(root) [root@starlabs ~]# cat $CONDA_PREFIX/etc/conda/activate.d/keras_activate.sh
#!/bin/bash
if [ "$(uname)" == "Darwin" ]
then
    # for Mac OSX
    export KERAS_BACKEND=tensorflow
elif [ "$(uname)" == "Linux" ]
then
    # for Linux
    export KERAS_BACKEND=theano
fi

# ---------------- run tderam
# suche ein GPU 
nvidia-smi
# start.py ausführen
python3 start.py --gpu=1
# ------------- fehlermeldungen

in "model_keras" lösche den Parameter Batch_Size aus dem Input Class

in train.py auf der Zeile 234 musste die funktion fit des Models gegen fit_generator asugetauscht werden


# --------------------


scp -r gucr@globus.informatik.tu-chemnitz.de: /scratch/gucr/shadowGAN/ARShadowGAN/output  /home/cristian/Downloads/

scp /home/cristian/Downloads/Shadow-AR.zip  gucr@globus.informatik.tu-chemnitz.de:/scratch/gucr/shadowGAN/ARShadowGAN/data



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

